name: 'Composite Run Steps Action Template'

description: 'Add description here'

inputs:
  db-server-name:
    description: The database server name.
    required: true
  db-server-port:
    description: The port the database server listens on.
    required: false
    default: '1433'
  db-name:
    description: The name of the database to run tests against.
    required: true
  query-timeout:
    description: An optional setting, in seconds, for when to timeout the query that runs the tests. If tests sometimes hang, or they shouldn't take longer than a certain amount of time, this parameter can be helpful.
    required: false
  use-integrated-security:
    description: A switch defining whether or not to use integrated security. If not provided, a password should be.
    required: true
    default: 'false'
  db-username:
    description: The username to use to login to the database.
    required: false
  db-password:
    description: The password for the user logging in to the database.
    required: false

outputs:
  test-results-file-path:
    description: The path to the test results xml file.
    value: '${{ steps.results-file.outputs.file_path }}'
  total-number-of-tests:
    description: The total number of tests run.
    value: '${{ steps.results.outputs.number_of_tests }}'
  total-number-of-test-failures:
    description: The total number of tests that failed.
    value: '${{ steps.results.outputs.number_of_failures }}'
  total-number-of-test-errors:
    description: The total number of test errors.
    value: '${{ steps.results.outputs.number_of_errors }}'

runs:
  using: 'composite'
  steps:
    - name: Run tSqlt tests
      shell: pwsh
      run: |
        [System.Security.SecureString] $securePassword = if(!!"${{ inputs.db-password }}") { ConvertTo-SecureString "${{ inputs.db-password }}" -AsPlainText -Force } else { $null }

        ${{ github.action_path }}/src/run-tsqlt.ps1 `
          -dbServer "${{ inputs.db-server-name }}" `
          -dbServerPort "${{ inputs.db-server-port }}" `
          -dbName "${{ inputs.db-name }}" `
          -queryTimeout "${{ inputs.query-timeout }}" `
          -useIntegratedSecurity:$${{ inputs.use-integrated-security }} `
          -username "${{ inputs.db-username }}" `
          -password $securePassword

    - name: Print results
      id: results
      shell: pwsh
      run: ${{ github.action_path }}/src/print-results.ps1

    - name: Output test results file path
      id: results-file
      shell: bash
      run: echo "::set-output name=file_path::${{ github.action_path }}/test-results/test-results.xml"
